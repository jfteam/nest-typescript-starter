import 'reflect-metadata';
import { Controller } from '@nestjs/common/interfaces/controllers/controller.interface';
import { ExceptionsHandler } from '../exceptions/exceptions-handler';
import { Metatype } from '@nestjs/common/interfaces/index';
import { ExceptionFilterMetadata } from '@nestjs/common/interfaces/exceptions/exception-filter-metadata.interface';
import { ExceptionFilter } from '@nestjs/common/interfaces/exceptions/exception-filter.interface';
import { RouterProxyCallback } from './../router/router-proxy';
import { ContextCreator } from './../helpers/context-creator';
import { ApplicationConfig } from './../application-config';
export declare class RouterExceptionFilters extends ContextCreator {
    private readonly config;
    constructor(config: ApplicationConfig);
    create(instance: Controller, callback: RouterProxyCallback): ExceptionsHandler;
    getGlobalMetadata(): ExceptionFilter[];
    createConcreteContext(metadata: ExceptionFilter[]): ExceptionFilterMetadata[];
    reflectCatchExceptions(instance: ExceptionFilter): Metatype<any>[];
}
